version: "3.8"

services:
  db:
    image: postgres:14
    container_name: cc_db
    environment:
      - POSTGRES_USER=cc_user
      - POSTGRES_PASSWORD=cc_password
      - POSTGRES_DB=cc_webapp
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - cc_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cc_user -d cc_webapp"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: 
      context: ./cc-webapp/backend
      dockerfile: Dockerfile
    container_name: cc_api
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://cc_user:cc_password@db/cc_webapp
      - JWT_SECRET_KEY=dev_secret_key
    volumes:
      - ./cc-webapp/backend:/app
      - ./logs/backend:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - cc_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  web:
    build:
      context: ./cc-webapp/frontend
      dockerfile: Dockerfile.dev
    container_name: cc_web
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./cc-webapp/frontend:/app
      - ./logs/frontend:/app/logs
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - cc_network

networks:
  cc_network:
    driver: bridge
