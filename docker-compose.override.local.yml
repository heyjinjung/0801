services:
  backend:
    container_name: cc_backend_local
    environment:
      KAFKA_ENABLED: "1"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_TOPICS: "cc_test"
      KAFKA_CONSUMER_GROUP: "cc_backend_group"
    ports:
      - "8001:8000"

  frontend:
    container_name: cc_frontend_local
    environment:
      NEXT_PUBLIC_API_URL: "${NEXT_PUBLIC_API_URL:-http://127.0.0.1:8001}"
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - "3001:3000"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:3000',r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))\""]
      interval: 15s
      timeout: 5s
      start_period: 30s
      retries: 10
    # Use base compose command (npm run dev) and package.json script binds to 0.0.0.0:3000

  postgres:
    container_name: cc_postgres_local
    ports:
      - "55432:5432"

  redis:
    container_name: cc_redis_local

  kafka:
    container_name: cc_kafka_local

  zookeeper:
    container_name: cc_zookeeper_local
