version: "3.8"

services:
  backend:
    build:
      context: ./cc-webapp/backend
      dockerfile: Dockerfile
    container_name: cc_backend_simple
    environment:
      - PYTHONPATH=/app
      - POSTGRES_SERVER=postgres_simple
      - POSTGRES_USER=cc_user
      - POSTGRES_PASSWORD=cc_password
      - POSTGRES_DB=cc_webapp
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET_KEY=simple_secret_key_for_development
    volumes:
      - ./cc-webapp/backend:/app
      - ./logs/backend:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - ccnet
    command: ["sh", "-c", "uvicorn app.main_simple:app --host 0.0.0.0 --port 8000 --reload"]

  frontend:
    build:
      context: ./cc-webapp/frontend
      dockerfile: Dockerfile.dev
    container_name: cc_frontend_simple
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./cc-webapp/frontend:/app
      - ./logs/frontend:/app/logs
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - ccnet

  postgres:
    image: postgres:14
    container_name: postgres_simple
    environment:
      - POSTGRES_USER=cc_user
      - POSTGRES_PASSWORD=cc_password
      - POSTGRES_DB=cc_webapp
    volumes:
      - ./data/postgres_simple:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ccnet

  # pgAdmin 개발 도구 추가
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cc_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@casino-club.local
      - PGADMIN_DEFAULT_PASSWORD=admin123
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - ccnet

networks:
  ccnet:
    driver: bridge
