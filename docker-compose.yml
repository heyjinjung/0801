version: "3.8"

services:
  backend:
    build:
      context: ./cc-webapp/backend
      dockerfile: Dockerfile
    container_name: cc_backend
    environment:
      - PYTHONPATH=/app
      - POSTGRES_SERVER=${POSTGRES_SERVER:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-cc_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-cc_password}
      - POSTGRES_DB=${POSTGRES_DB:-cc_webapp}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-secret_key_for_development_only}
    volumes:
      - ./cc-webapp/backend:/app:rw
      - ./logs/backend:/app/logs:rw
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - ccnet

  frontend:
    build:
      context: ./cc-webapp/frontend
      dockerfile: Dockerfile.dev
    container_name: cc_frontend
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    volumes:
      - ./cc-webapp/frontend:/app:rw
      - ./logs/frontend:/app/logs:rw
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - ccnet

  postgres:
    image: postgres:14
    container_name: cc_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-cc_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-cc_password}
      - POSTGRES_DB=${POSTGRES_DB:-cc_webapp}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data:rw
      - ./logs/postgres:/var/log/postgresql:rw
    ports:
      - "5432:5432"
    networks:
      - ccnet

  redis:
    image: redis:7
    container_name: cc_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    networks:
      - ccnet

networks:
  ccnet:
    driver: bridge