services:
  backend:
    build:
      context: ./cc-webapp/backend
      dockerfile: Dockerfile
    container_name: cc_backend
    environment:
      PYTHONPATH: /app
      POSTGRES_SERVER: postgres
      POSTGRES_USER: cc_user
      POSTGRES_PASSWORD: cc_password
      POSTGRES_DB: cc_webapp
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      JWT_SECRET_KEY: secret_key_for_development_only
      KAFKA_ENABLED: ${KAFKA_ENABLED:-0}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
      CLICKHOUSE_ENABLED: ${CLICKHOUSE_ENABLED:-0}
      CLICKHOUSE_URL: ${CLICKHOUSE_URL:-http://clickhouse:8123}
      CLICKHOUSE_DATABASE: ${CLICKHOUSE_DATABASE:-cc_olap}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-}
      OLAP_BATCH_SIZE: ${OLAP_BATCH_SIZE:-200}
      OLAP_FLUSH_SECONDS: ${OLAP_FLUSH_SECONDS:-2}
    volumes:
      - ./cc-webapp/backend:/app
      - ./logs/backend:/app/logs:rw
    depends_on:
      - postgres
      - redis
      - kafka
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 15s
      timeout: 5s
      retries: 5
    networks:
      - ccnet

  frontend:
    build:
      context: ./cc-webapp/frontend
      dockerfile: Dockerfile.dev
    container_name: cc_frontend
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    volumes:
      - ./cc-webapp/frontend:/app
      - ./logs/frontend:/app/logs:rw
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    command: ["sh","-c","npm ci || npm install && npm run dev"]
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:3000',r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))\""]
      interval: 15s
      timeout: 5s
      retries: 5
    networks:
      - ccnet

  postgres:
    image: postgres:14
    container_name: cc_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-cc_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-cc_password}
      POSTGRES_DB: ${POSTGRES_DB:-cc_webapp}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data:rw
      - ./logs/postgres:/var/log/postgresql:rw
      - ./data/init:/docker-entrypoint-initdb.d:ro
    networks:
      - ccnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cc_user} -d ${POSTGRES_DB:-cc_webapp}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: cc_redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-redis_password}"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis_password}", "PING"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ccnet

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: cc_zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - ccnet
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:3.6
    container_name: cc_kafka
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    networks:
      - ccnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1 || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10

  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    container_name: cc_clickhouse
    ports:
      - "8123:8123"
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DATABASE:-cc_olap}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-}
    volumes:
      - ./data/clickhouse:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - ccnet

  olap_worker:
    build:
      context: ./cc-webapp/backend
      dockerfile: Dockerfile
    container_name: cc_olap_worker
    command: ["python", "-m", "app.consumers.olap_worker"]
    environment:
      KAFKA_ENABLED: ${KAFKA_ENABLED:-0}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS:-kafka:9092}
      CLICKHOUSE_ENABLED: ${CLICKHOUSE_ENABLED:-0}
      CLICKHOUSE_URL: ${CLICKHOUSE_URL:-http://clickhouse:8123}
      CLICKHOUSE_DATABASE: ${CLICKHOUSE_DATABASE:-cc_olap}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-}
      OLAP_BATCH_SIZE: ${OLAP_BATCH_SIZE:-200}
      OLAP_FLUSH_SECONDS: ${OLAP_FLUSH_SECONDS:-2}
    depends_on:
      kafka:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ccnet

networks:
  ccnet:
    driver: bridge